-- ======================= Chop Aura & Kill Aura=======================

-- [STATE VARIABLES]
local chopAuraToggle = false
local killAuraToggle = false

local chopAuraRadius = 50
local killAuraRadius = 50
local currentammount = 0

-- [TOOLS CONFIG]
local toolsDamageIDs = {
    ["Old Axe"] = "3_7367831688",
    ["Good Axe"] = "112_7367831688",
    ["Strong Axe"] = "116_7367831688",
}

local function getAnyToolWithDamageID()
    for toolName, damageID in pairs(toolsDamageIDs) do
        local inv = game.Players.LocalPlayer:FindFirstChild("Inventory")
        if inv then
            local tool = inv:FindFirstChild(toolName)
            if tool then
                return tool, damageID
            end
        end
    end
    return nil, nil
end

local function equipTool(tool)
    if tool then
        game:GetService("ReplicatedStorage")
            :WaitForChild("RemoteEvents")
            :WaitForChild("EquipItemHandle")
            :FireServer("FireAllClients", tool)
    end
end

local function unequipTool(tool)
    if tool then
        game:GetService("ReplicatedStorage")
            :WaitForChild("RemoteEvents")
            :WaitForChild("UnequipItemHandle")
            :FireServer("FireAllClients", tool)
    end
end

local function chopAuraLoop()
    while chopAuraToggle do
        -- Cegah konflik dengan Kill Aura
        if killAuraToggle then return end

        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:FindFirstChild("HumanoidRootPart")

        if hrp then
            local tool, _ = getAnyToolWithDamageID()
            if tool then
                equipTool(tool)
                local map = workspace:FindFirstChild("Map")
                if map then
                    local trees = {}
                    if map:FindFirstChild("Foliage") then
                        for _, obj in ipairs(map.Foliage:GetChildren()) do
                            if obj:IsA("Model") and (obj.Name == "Small Tree" or obj.Name == "Snowy Small Tree") then
                                table.insert(trees, obj)
                            end
                        end
                    end
                    if map:FindFirstChild("Landmarks") then
                        for _, obj in ipairs(map.Landmarks:GetChildren()) do
                            if obj:IsA("Model") and obj.Name == "Small Tree" then
                                table.insert(trees, obj)
                            end
                        end
                    end

                    for _, tree in ipairs(trees) do
                        local trunk = tree:FindFirstChild("Trunk")
                        if trunk and (trunk.Position - hrp.Position).Magnitude <= chopAuraRadius then
                            currentammount += 1
                            task.spawn(function()
                                pcall(function()
                                    local args = {
                                        tree,
                                        tool,
                                        tostring(currentammount) .. "_5464154339",
                                        CFrame.new(hrp.Position)
                                    }
                                    game:GetService("ReplicatedStorage")
                                        :WaitForChild("RemoteEvents")
                                        :WaitForChild("ToolDamageObject")
                                        :InvokeServer(unpack(args))
                                end)
                            end)
                        end
                    end
                end
            end
        end
        task.wait(0.3)
    end
end

local function killAuraLoop()
    while killAuraToggle do
        -- Cegah konflik dengan Chop Aura
        if chopAuraToggle then return end

        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:FindFirstChild("HumanoidRootPart")

        if hrp then
            local tool, _ = getAnyToolWithDamageID()
            if tool then
                equipTool(tool)
                local chars = workspace:FindFirstChild("Characters")
                if chars then
                    for _, target in ipairs(chars:GetChildren()) do
                        if target:IsA("Model") and target:FindFirstChild("HumanoidRootPart") then
                            local dist = (target.HumanoidRootPart.Position - hrp.Position).Magnitude
                            if dist <= killAuraRadius then
                                currentammount += 1
                                task.spawn(function()
                                    pcall(function()
                                        local args = {
                                            target,
                                            tool,
                                            tostring(currentammount) .. "_5464154339",
                                            CFrame.new(hrp.Position)
                                        }
                                        game:GetService("ReplicatedStorage")
                                            :WaitForChild("RemoteEvents")
                                            :WaitForChild("ToolDamageObject")
                                            :InvokeServer(unpack(args))
                                    end)
                                end)
                            end
                        end
                    end
                end
            end
        end
        task.wait(0.25)
    end
end

-- ======================= Auto Submit =======================

local targetCFrames = {
    ["CampFire"] = CFrame.new(
        0.0205104575, 14.2929211, -0.172306404,
        0.901491344, 0, 0.432797134,
        0, 1, 0,
        -0.432797134, 0, 0.901491344
    ),

    ["Scrapper"] = CFrame.new(
        20.1605988, 16.7862568, -4.60780573,
        0.954762101, 0.0555610359, -0.292133957,
        -1.90373467e-10, 0.982390165, 0.186841056,
        0.297370613, -0.178388759, 0.937948942
    ),
}

local folder = workspace:WaitForChild("Items")
local autoSubmit = false
local selectedCFrame = "CampFire"

local function dropLog(item, cframe)
    if not item.PrimaryPart then
        local primary = item:FindFirstChildWhichIsA("BasePart")
        if primary then
            item.PrimaryPart = primary
        else
            return
        end
    end

    -- Pastikan semua part bisa jatuh
    for _, part in ipairs(item:GetDescendants()) do
        if part:IsA("BasePart") then
            part.Anchored = false
            part.CanCollide = true
        end
    end

    -- Pindahkan Log ke posisi target
    item:SetPrimaryPartCFrame(cframe)

    -- Tambahkan gaya dorong kecil agar jatuh natural
    local bv = Instance.new("BodyVelocity")
    bv.Velocity = Vector3.new(math.random(-5,5), 10, math.random(-5,5))
    bv.MaxForce = Vector3.new(4000,4000,4000)
    bv.P = 2000
    bv.Parent = item.PrimaryPart
    game.Debris:AddItem(bv, 0.3)
end

task.spawn(function()
    while task.wait(0.5) do
        if autoSubmit then
            local cframe = targetCFrames[selectedCFrame]
            for _, item in ipairs(folder:GetChildren()) do
                if item:IsA("Model") and item.Name == "Log" then
                    dropLog(item, cframe)
                    task.wait(0.5) -- jeda antar Log
                end
            end
        end
    end
end)

-- ======================= Auto Cook =======================

-- daftar nama item yang mau di-bring
local targetItems = {
    "Carrot", "Corn", "Pumpkin", "Berry", "Apple", "Morsel", "Cooked Morsel",
    "Steak", "Cooked Steak", "Ribs", "Cooked Ribs", "Cake", "Chili", "Stew",
    "Hearty Stew", "Meat Sandwich", "Seafood Chowder", "Steak Dinner",
    "Pumpkin Soup", "BBQ Ribs", "Carrot Cake", "Jar o' Jelly", "Mackerel",
    "Cooked Mackerel", "Salmon", "Cooked Salmon", "Clownfish",
    "Cooked Clownfish", "Jellyfish", "Char", "Cooked Char", "Eel",
    "Cooked Eel", "Swordfish", "Cooked Swordfish", "Shark", "Cooked Shark",
    "Lava Eel", "Cooked Lava Eel", "Lionfish"
}

-- ubah ke format lookup
local itemLookup = {}
for _, name in ipairs(targetItems) do
    itemLookup[name] = true
end

-- posisi target (CFrame)
local targetCFrame = CFrame.new(
    1.25811517, 14.5849133, 0.726119816,
    0.186641589, -0.160326943, 0.969257534,
    -2.82133117e-09, 0.986593902, 0.163194582,
    -0.982428074, -0.0304588992, 0.184139445
)

-- variabel global toggle
local autoCookedToggle = false

-- fungsi utama
local function bringItemsSlow()
    while autoCookedToggle do
        for _, v in pairs(workspace.Items:GetChildren()) do
            if not autoCookedToggle then break end
            if itemLookup[v.Name] and v:IsA("Model") then
                -- pastikan ada PrimaryPart
                if not v.PrimaryPart then
                    local primary = v:FindFirstChildWhichIsA("BasePart")
                    if primary then
                        v.PrimaryPart = primary
                    end
                end

                if v.PrimaryPart then
                    -- teleport ke posisi target
                    v:SetPrimaryPartCFrame(targetCFrame)

                    -- pastikan semua bagian bisa jatuh
                    for _, part in pairs(v:GetDescendants()) do
                        if part:IsA("BasePart") then
                            part.Anchored = false
                        end
                    end

                    -- delay biar gak lag
                    task.wait(0.2)
                end
            end
        end
        task.wait(1) -- tunggu sebentar sebelum ulang scan
    end
end

local WindUI = loadstring(game:HttpGet("https://raw.githubusercontent.com/Footagesus/WindUI/main/dist/main.lua"))()

local Localization = WindUI:Localization({
    Enabled = true,
    Prefix = "loc:",
    DefaultLanguage = "en",
    Translations = {
        ["en"] = {
            ["WINDUI_EXAMPLE"] = "WindUI Example",
            ["WELCOME"] = "Welcome to WindUI!",
            ["LIB_DESC"] = "Beautiful UI library for Roblox",
            ["SETTINGS"] = "Settings",
            ["APPEARANCE"] = "Appearance",
            ["FEATURES"] = "Features",
            ["UTILITIES"] = "Utilities",
            ["UI_ELEMENTS"] = "UI Elements",
            ["CONFIGURATION"] = "Configuration",
            ["SAVE_CONFIG"] = "Save Configuration",
            ["LOAD_CONFIG"] = "Load Configuration",
            ["THEME_SELECT"] = "Select Theme",
            ["TRANSPARENCY"] = "Window Transparency",
            ["LOCKED_TAB"] = "Locked Tab"
        }
    }
})

WindUI.TransparencyValue = 0.2
WindUI:SetTheme("Dark")

local function gradient(text, startColor, endColor)
    local result = ""
    for i = 1, #text do
        local t = (i - 1) / (#text - 1)
        local r = math.floor((startColor.R + (endColor.R - startColor.R) * t) * 255)
        local g = math.floor((startColor.G + (endColor.G - startColor.G) * t) * 255)
        local b = math.floor((startColor.B + (endColor.B - startColor.B) * t) * 255)
        result = result .. string.format('<font color="rgb(%d,%d,%d)">%s</font>', r, g, b, text:sub(i, i))
    end
    return result
end


-- Ambil nama player
local player = game.Players.LocalPlayer
local playerName = player.Name
local playerDisplayName = player.DisplayName

-- Buat Window versi baru
local Window = WindUI:CreateWindow({
    Title = "Nexa - Premium",
    Icon = "rbxassetid://107488593993096",
    Author = "99 Script | @ Han",
    Folder = "Hanzo",
    Size = UDim2.fromOffset(540, 420),
    Transparent = true,
    Theme = "Dark",
    
    HidePanelBackground = true,
    NewElements = false,
    Background = "https://i.imgur.com/GsfBtXF.jpeg",
    User = {
        Enabled = true,
        Anonymous = false,           -- false biar muncul nama asli
        Name = playerDisplayName,    -- Nama tampilan
        UserName = "@" .. playerName, -- Username Roblox
        Callback = function()
            WindUI:Notify({
                Title = "User Profile",
                Content = "User profile clicked!",
                Duration = 3
            })
        end
    },
    
    Acrylic = false,
    HideSearchBar = false,
    SideBarWidth = 200,
})

Window:Tag({
    Title = "v0.1.3",
    Color = Color3.fromHex("#30ff6a")
})


Window:EditOpenButton({
    Enabled = false
})

task.delay(6.5, function()
    WindUI:Notify({
        Title = "Bug Report",
        Content = "If there are any errors, please let the developer know. Join Discord to report bugs.",
        Icon = "cloud-alert",
        Duration = 6
    })
end)

task.delay(13, function()
    WindUI:Notify({
        Title = "Purchase",
        Content = "If you want to buy this premium script key, join Discord to buy premium.",
        Icon = "shopping-cart",
        Duration = 6
    })
end)

local Tabs = {
    Home = Window:Tab({ Title = "Home", Icon = "house"  }),
    Info = Window:Tab({ Title = "Info", Icon = "info"  }),
    Farm = Window:Tab({ Title = "Main", Icon = "swords"  }),
    Auto = Window:Tab({ Title = "Automaticaly", Icon = "repeat-2"  }),
}

Tabs.Home:Section({ Title = "Update" })

Tabs.Home:Paragraph({
    Title = "Here's what's new:",
    Desc = [[
[+] Added Teleport To Prison
[+] Added Teleport To Plot
    ]]
})

Tabs.Home:Section({ Title = "Server" })

Tabs.Home:Paragraph({
    Title = "Discord - Nexa | COMMUNITY",
    Desc = "Indonesia 🇮🇩",
    Image = "https://images-eds-ssl.xboxlive.com/image?url=4rt9.lXDC4H_93laV1_eHHFT949fUipzkiFOBH3fAiZZUCdYojwUyX2aTonS1aIwMrx6NUIsHfUHSLzjGJFxxsG72wAo9EWJR4yQWyJJaDaK1XdUso6cUMpI9hAdPUU_FNs11cY1X284vsHrnWtRw7oqRpN1m9YAg21d_aNKnIo-&format=source",
    ImageSize = 20,
    Color = "Grey",
    Buttons = {
        {
            Title = "Copy Link",
            Icon = "copy",
            Variant = "Tertiary",
            Callback = function()
                setclipboard("discord.gg/ECxQFc97F5")
                WindUI:Notify({
                    Title = "Copied!",
                    Content = "Discord link copied to clipboard",
                    Duration = 2
                })
            end
        }
    }
})

Tabs.Farm:Section({ Title = "Farm" })

-- Chop Aura Toggle
Tabs.Farm:Toggle({
    Title = "Chop Aura",
    Value = false,
    Callback = function(state)
        if killAuraToggle then
            killAuraToggle = false
        end
        chopAuraToggle = state
        if state then
            task.spawn(chopAuraLoop)
        else
            local tool, _ = getAnyToolWithDamageID()
            unequipTool(tool)
        end
    end
})

-- Kill Aura Toggle
Tabs.Farm:Toggle({
    Title = "Kill Aura",
    Value = false,
    Callback = function(state)
        if chopAuraToggle then
            chopAuraToggle = false
        end
        killAuraToggle = state
        if state then
            task.spawn(killAuraLoop)
        else
            local tool, _ = getAnyToolWithDamageID()
            unequipTool(tool)
        end
    end
})

-- Chop Aura Radius Input
Tabs.Farm:Input({
    Title = "Chop Aura Radius",
    Value = tostring(chopAuraRadius),
    Placeholder = "Enter Chop Aura Radius (ex: 75)",
    Callback = function(input)
        local number = tonumber(input)
        if number and number > 0 then
            chopAuraRadius = number
        end
    end
})

-- Kill Aura Radius Input
Tabs.Farm:Input({
    Title = "Kill Aura Radius",
    Value = tostring(killAuraRadius),
    Placeholder = "Enter Kill Aura Radius (ex: 75)",
    Callback = function(input)
        local number = tonumber(input)
        if number and number > 0 then
            killAuraRadius = number
        end
    end
})


Tabs.Auto:Section({ Title = "Automation" })

Tabs.Auto:Dropdown({
    Title = "Select Submit",
    Values = { "CampFire", "Scrapper" },
    Value = "CampFire",
    Callback = function(option)
        selectedCFrame = option
    end
})

Tabs.Auto:Toggle({
    Title = "Auto Submit",
    Value = false,
    Callback = function(state)
        autoSubmit = state
        if state then
        else
        end
    end
})

-- toggle di UI
Tabs.Auto:Toggle({
    Title = "Auto Cooked",
    Value = false,
    Callback = function(state)
        autoCookedToggle = state
        if state then
            task.spawn(bringItemsSlow)
        end
    end
})
